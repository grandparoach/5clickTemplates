{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01-preview/deploymentTemplate.json",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"virtualNetworkName": {
           "type": "string",
           "metadata": {
              "description": "This is the name of the existing VNet."
           }
        },
        "virtualNetworkResourceGroup": {
           "type": "string",
           "metadata": {
              "description": "This is the name of the Resource Group which contains the VNet."
           }
        },
        "subnetName": {
           "type": "string",
           "metadata": {
              "description": "This is the name of the subnet to use for the NFS server."
           }
        },
        "jumpboxSku": {
			"defaultValue": "Standard_DS4_v2",
			"allowedValues": [
				"Standard_DS4_v2",
				"Standard_DS13_v2",
				"Standard_DS14_v2"				
			],
			"type": "String",
			"metadata": {
				"description": "Size of the Jump Box?"
			}
		},
        "vmSku": {
			"defaultValue": "Standard_H16R",
			"allowedValues": [
				"Standard_A4",
				"Standard_A8",
				"Standard_A9",
				"Standard_A10",
				"Standard_A11",
				"Standard_H16R",
				"Standard_H16MR"				
			],
			"type": "String",
			"metadata": {
				"description": "Which instance would you like to deploy to?"
			}
		},
		"vmssName": {
			"maxLength": 10,
			"type": "String",
			"metadata": {
				"description": "String used as a base for naming resources. Must be 3-10 characters in length and globally unique across Azure. A hash is prepended to this string for some resources, and resource-specific information is appended."
			}
		},
		"instanceCount": {
			"maxValue": 100,
			"type": "Int",
			"metadata": {
				"description": "Number of VM instances (100 or less)."
			}
		},
		"adminUsername": {
			"type": "String",
			"metadata": {
				"description": "Admin username on all VMs."
			}
		},
		"adminPassword": {
			"type": "SecureString",
			"metadata": {
				"description": "Admin password on all VMs."
			}
		},
		"licenseIP": {
			"maxLength": 15,
			"defaultValue": "",
			"type": "String",
			"metadata": {
				"description": "ANSYS License Server IP, standard ports. MSFT Users contact tanewill@microsoft.com for license"
			}
		},
		"downloadModel": {
			"defaultValue": "sedan_4m.tar",
			"allowedValues": [
				"",
				"sedan_4m.tar",
				"aircraft_wing_14.tar",
				"f1_racecar_140m.tar"
			],
			"type": "String",
			"metadata": {
				"description": "Which benchark model would you like to download"
			}
		},
        "dataDiskSize": {
      "type": "int",
      "defaultValue": 128,
      "metadata": {
        "description": "The size in GB of each data disk that is attached to the VM.  A RAID-0 volume is created with all data disks that is dataDiskSize * dataDiskCount in size."
      }
    }
	},

	"variables": {
		"namingInfix": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]",
		"longNamingInfix": "[toLower(parameters('vmssName'))]",
		"jumpBoxName": "[concat(variables('longNamingInfix'),'jb')]",
		"jumpBoxSAName": "[concat(uniqueString(concat(resourceGroup().id, variables('newStorageAccountSuffix'), 'jumpboxsa')), 'jb')]",
		"jumpBoxOSDiskName": "[concat(variables('jumpBoxName'), 'osdisk')]",
		"jumpBoxVHDContainerName": "[concat(variables('jumpBoxName'), 'vhd')]",
		"jumpBoxIPConfigName": "[concat(variables('jumpBoxName'), 'ipconfig')]",
		"jumpBoxNicName": "[concat(variables('jumpBoxName'), 'nic')]",
		"storageAccountType": "Standard_LRS",
		"newStorageAccountSuffix": "[concat(variables('namingInfix'), 'sa')]",
		"uniqueStringArray": [
			"[concat(uniqueString(concat(resourceGroup().id, variables('newStorageAccountSuffix'), '0')))]",
			"[concat(uniqueString(concat(resourceGroup().id, variables('newStorageAccountSuffix'), '1')))]",
			"[concat(uniqueString(concat(resourceGroup().id, variables('newStorageAccountSuffix'), '2')))]",
			"[concat(uniqueString(concat(resourceGroup().id, variables('newStorageAccountSuffix'), '3')))]",
			"[concat(uniqueString(concat(resourceGroup().id, variables('newStorageAccountSuffix'), '4')))]"
		],
		"saCount": "[length(variables('uniqueStringArray'))]",
		"vhdContainerName": "[concat(variables('namingInfix'), 'vhd')]",
		"osDiskName": "[concat(variables('namingInfix'), 'osdisk')]",
        "vnetID": "[resourceId(parameters('virtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
        "subnetRef": "[concat(variables('vnetID'),'/subnets/', parameters('subnetName'))]",
		"publicIPAddressName": "[concat(variables('namingInfix'), 'pip')]",
		"publicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]",
		"nicName": "[concat(variables('namingInfix'), 'nic')]",
		"ipConfigName": "[concat(variables('namingInfix'), 'ipconfig')]",
		"scriptUrl": "https://raw.githubusercontent.com/grandparoach/5clickTemplates/master/RawANSYSCluster/",
		"cnSetupScript": "cn-setup.sh",
		"hnSetupScript": "hn-setup.sh",
		"osType": {
			"publisher": "OpenLogic",
			"offer": "CentOS-HPC",
			"sku": "7.1",
			"version": "latest"
		},
		"imageReference": "[variables('osType')]",
		"vmScripts": {
			"scriptsToDownload": [
				"[concat(variables('scriptUrl'), 'cn-setup.sh')]",
				"[concat(variables('scriptUrl'), 'hn-setup.sh')]",
				"[concat(variables('scriptUrl'), 'install-fluent.sh')]",
				"[concat(variables('scriptUrl'), 'clusRun.sh')]",
				"[concat(variables('scriptUrl'), 'runme.jou')]"
			],
			"commandToExecute": ""
		},
		"computeApiVersion": "2016-03-30",
		"networkApiVersion": "2016-03-30",
		"storageApiVersion": "2015-06-15"
	},
	"resources": [ {
		"type": "Microsoft.Storage/storageAccounts",
		"name": "[variables('jumpBoxSAName')]",
		"apiVersion": "[variables('storageApiVersion')]",
		"location": "[resourceGroup().location]",
		"properties": {
			"accountType": "Premium_LRS"
		}
	}, {
		"type": "Microsoft.Storage/storageAccounts",
		"name": "[concat(variables('uniqueStringArray')[copyIndex()], variables('newStorageAccountSuffix'))]",
		"apiVersion": "[variables('storageApiVersion')]",
		"location": "[resourceGroup().location]",
		"copy": {
			"name": "storageLoop",
			"count": "[variables('saCount')]"
		},
		"properties": {
			"accountType": "[variables('storageAccountType')]"
		}
	}, {
		"type": "Microsoft.Network/publicIPAddresses",
		"name": "[variables('publicIPAddressName')]",
		"apiVersion": "[variables('networkApiVersion')]",
		"location": "[resourceGroup().location]",
		"properties": {
			"publicIPAllocationMethod": "Dynamic",
			"dnsSettings": {
				"domainNameLabel": "[variables('longNamingInfix')]"
			}
		}
	}, {
		"type": "Microsoft.Network/networkInterfaces",
		"name": "[variables('jumpBoxNicName')]",
		"apiVersion": "[variables('networkApiVersion')]",
		"location": "[resourceGroup().location]",
		"properties": {
			"ipConfigurations": [{
				"name": "[variables('jumpBoxIPConfigName')]",
				"properties": {
					"privateIPAllocationMethod": "Dynamic",
					"publicIPAddress": {
						"id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
					},
					"subnet": {
						"id": "[variables('subnetRef')]"
					}
				}
			}]
		},
		"dependsOn": [
			"[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
		]
	}, {
		"type": "Microsoft.Compute/virtualMachines",
		"name": "[variables('jumpBoxName')]",
		"apiVersion": "[variables('computeApiVersion')]",
		"location": "[resourceGroup().location]",
		"properties": {
			"hardwareProfile": {
				"vmSize": "[parameters('jumpboxSku')]"
			},
			"osProfile": {
				"computerName": "[variables('jumpBoxName')]",
				"adminUsername": "[parameters('adminUsername')]",
				"adminPassword": "[parameters('adminPassword')]"
			},
			"storageProfile": {
				"imageReference": "[variables('imageReference')]",
				"osDisk": {
					"name": "[variables('jumpBoxOSDiskName')]",
					"vhd": {
						"uri": "[concat('http://',variables('jumpBoxSAName'),'.blob.core.windows.net/',variables('jumpBoxVHDContainerName'),'/',variables('jumpBoxOSDiskName'),'.vhd')]"
					},
					"caching": "ReadWrite",
					"createOption": "FromImage"
				},
          "dataDisks": [ 
            { 
            "name": "datadisk0", 
            "diskSizeGB": "[parameters('dataDiskSize')]", 
            "lun": 0, 
            "vhd": { 
              "uri": "[concat('http://',variables('jumpBoxSAName'),'.blob.core.windows.net/',variables('jumpBoxVHDContainerName'),'/datadisk0.vhd')]"
              }, 
            "caching": "ReadWrite", 
            "createOption": "Empty" 
            }, 
            { 
            "name": "datadisk1", 
            "diskSizeGB": "[parameters('dataDiskSize')]", 
            "lun": 1, 
            "vhd": { 
              "uri": "[concat('http://',variables('jumpBoxSAName'),'.blob.core.windows.net/',variables('jumpBoxVHDContainerName'),'/datadisk1.vhd')]"
              }, 
            "caching": "ReadWrite", 
            "createOption": "Empty" 
            }, 
            { 
            "name": "datadisk2", 
            "diskSizeGB": "[parameters('dataDiskSize')]", 
            "lun": 2, 
            "vhd": { 
              "uri": "[concat('http://',variables('jumpBoxSAName'),'.blob.core.windows.net/',variables('jumpBoxVHDContainerName'),'/datadisk2.vhd')]"
              }, 
            "caching": "ReadWrite", 
            "createOption": "Empty" 
            }, 
            { 
            "name": "datadisk3", 
            "diskSizeGB": "[parameters('dataDiskSize')]", 
            "lun": 3, 
            "vhd": { 
              "Uri":  "[concat('http://',variables('jumpBoxSAName'),'.blob.core.windows.net/',variables('jumpBoxVHDContainerName'),'/datadisk3.vhd')]"
              }, 
            "caching": "ReadWrite", 
            "createOption": "Empty" 
            }, 
            { 
            "name": "datadisk4", 
            "diskSizeGB": "[parameters('dataDiskSize')]", 
            "lun": 4, 
            "vhd": { 
              "Uri":  "[concat('http://',variables('jumpBoxSAName'),'.blob.core.windows.net/',variables('jumpBoxVHDContainerName'),'/datadisk4.vhd')]" 
              }, 
            "caching": "ReadWrite", 
            "createOption": "Empty" 
            }, 
            { 
            "name": "datadisk5", 
            "diskSizeGB": "[parameters('dataDiskSize')]", 
            "lun": 5, 
            "vhd": { 
              "Uri":  "[concat('http://',variables('jumpBoxSAName'),'.blob.core.windows.net/',variables('jumpBoxVHDContainerName'),'/datadisk5.vhd')]"
              }, 
            "caching": "ReadWrite", 
            "createOption": "Empty" 
            }, 
            { 
            "name": "datadisk6", 
            "diskSizeGB": "[parameters('dataDiskSize')]", 
            "lun": 6, 
            "vhd": { 
              "Uri":  "[concat('http://',variables('jumpBoxSAName'),'.blob.core.windows.net/',variables('jumpBoxVHDContainerName'),'/datadisk6.vhd')]"
              }, 
            "caching": "ReadWrite", 
            "createOption": "Empty" 
            }, 
            { 
            "name": "datadisk7", 
            "diskSizeGB": "[parameters('dataDiskSize')]", 
            "lun": 7, 
            "vhd": { 
              "Uri":  "[concat('http://',variables('jumpBoxSAName'),'.blob.core.windows.net/',variables('jumpBoxVHDContainerName'),'/datadisk7.vhd')]" 
              }, 
            "caching": "ReadWrite", 
            "createOption": "Empty" 
            }, 
            { 
            "name": "datadisk8", 
            "diskSizeGB": "[parameters('dataDiskSize')]", 
            "lun": 8, 
            "vhd": { 
              "Uri":  "[concat('http://',variables('jumpBoxSAName'),'.blob.core.windows.net/',variables('jumpBoxVHDContainerName'),'/datadisk8.vhd')]" 
              }, 
            "caching": "ReadWrite", 
            "createOption": "Empty" 
            }, 
            { 
            "name": "datadisk9", 
            "diskSizeGB": "[parameters('dataDiskSize')]", 
            "lun": 9, 
            "vhd": { 
              "Uri":  "[concat('http://',variables('jumpBoxSAName'),'.blob.core.windows.net/',variables('jumpBoxVHDContainerName'),'/datadisk9.vhd')]"
              }, 
            "caching": "ReadWrite", 
            "createOption": "Empty" 
            }, 
            { 
            "name": "datadisk10", 
            "diskSizeGB": "[parameters('dataDiskSize')]", 
            "lun": 10, 
            "vhd": { 
              "Uri":  "[concat('http://',variables('jumpBoxSAName'),'.blob.core.windows.net/',variables('jumpBoxVHDContainerName'),'/datadisk10.vhd')]"
              }, 
            "caching": "ReadWrite", 
            "createOption": "Empty" 
            }, 
            { 
            "name": "datadisk11", 
            "diskSizeGB": "[parameters('dataDiskSize')]", 
            "lun": 11, 
            "vhd": { 
              "Uri":  "[concat('http://',variables('jumpBoxSAName'),'.blob.core.windows.net/',variables('jumpBoxVHDContainerName'),'/datadisk11.vhd')]"
              }, 
            "caching": "ReadWrite", 
            "createOption": "Empty" 
            }, 
            { 
            "name": "datadisk12", 
            "diskSizeGB": "[parameters('dataDiskSize')]", 
            "lun": 12, 
            "vhd": { 
              "Uri":  "[concat('http://',variables('jumpBoxSAName'),'.blob.core.windows.net/',variables('jumpBoxVHDContainerName'),'/datadisk12.vhd')]"
              }, 
            "caching": "ReadWrite", 
            "createOption": "Empty" 
            }, 
            { 
            "name": "datadisk13", 
            "diskSizeGB": "[parameters('dataDiskSize')]", 
            "lun": 13, 
            "vhd": { 
              "Uri":  "[concat('http://',variables('jumpBoxSAName'),'.blob.core.windows.net/',variables('jumpBoxVHDContainerName'),'/datadisk13.vhd')]" 
              }, 
            "caching": "ReadWrite", 
            "createOption": "Empty" 
            }, 
            { 
            "name": "datadisk14", 
            "diskSizeGB": "[parameters('dataDiskSize')]", 
            "lun": 14, 
            "vhd": { 
              "Uri":  "[concat('http://',variables('jumpBoxSAName'),'.blob.core.windows.net/',variables('jumpBoxVHDContainerName'),'/datadisk14.vhd')]" 
              }, 
            "caching": "ReadWrite", 
            "createOption": "Empty" 
            }, 
            { 
            "name": "datadisk15", 
            "diskSizeGB": "[parameters('dataDiskSize')]", 
            "lun": 15, 
            "vhd": { 
              "Uri":  "[concat('http://',variables('jumpBoxSAName'),'.blob.core.windows.net/',variables('jumpBoxVHDContainerName'),'/datadisk15.vhd')]"
              }, 
            "caching": "ReadWrite", 
            "createOption": "Empty" 
            }
          ]
        },
			"networkProfile": {
				"networkInterfaces": [{
					"id": "[resourceId('Microsoft.Network/networkInterfaces',variables('jumpBoxNicName'))]"
				}]
			}
		},
		"resources": [{
			"type": "extensions",
			"name": "masterExtension",
			"apiVersion": "[variables('storageApiVersion')]",
			"location": "[resourceGroup().location]",
			"tags": {
				"displayName": "masterExtension"
			},
			"properties": {
				"publisher": "Microsoft.OSTCExtensions",
				"type": "CustomScriptForLinux",
				"typeHandlerVersion": "1.5",
				"autoUpgradeMinorVersion": true,
				"settings": {
					"fileUris": "[variables('vmScripts').scriptsToDownload]",
					"commandToExecute": "[concat('bash ', 'hn-setup.sh ',parameters('adminUsername'),' ',parameters('adminPassword'),' ',parameters('licenseIP'),' ',parameters('downloadModel')) ]"
				}
			},
			"dependsOn": [
				"[concat('Microsoft.Compute/virtualMachines/', variables('jumpBoxName'))]",
				"[concat('Microsoft.Compute/virtualMachineScaleSets/',variables('namingInfix'))]"
			]
		}],
		"dependsOn": [
			"[concat('Microsoft.Storage/storageAccounts/', variables('jumpBoxSAName'))]",
			"[concat('Microsoft.Network/networkInterfaces/', variables('jumpBoxNicName'))]"
		]
	}, {
		"type": "Microsoft.Compute/virtualMachineScaleSets",
		"sku": {
			"name": "[parameters('vmSku')]",
			"tier": "Standard",
			"capacity": "[parameters('instanceCount')]"
		},
		"name": "[variables('namingInfix')]",
		"apiVersion": "[variables('computeApiVersion')]",
		"location": "[resourceGroup().location]",
		"properties": {
			"overprovision": "true",
			"upgradePolicy": {
				"mode": "Manual"
			},
			"virtualMachineProfile": {
				"storageProfile": {
					"osDisk": {
						"vhdContainers": [
							"[concat('https://', variables('uniqueStringArray')[0], variables('newStorageAccountSuffix'), '.blob.core.windows.net/', variables('vhdContainerName'))]",
							"[concat('https://', variables('uniqueStringArray')[1], variables('newStorageAccountSuffix'), '.blob.core.windows.net/', variables('vhdContainerName'))]",
							"[concat('https://', variables('uniqueStringArray')[2], variables('newStorageAccountSuffix'), '.blob.core.windows.net/', variables('vhdContainerName'))]",
							"[concat('https://', variables('uniqueStringArray')[3], variables('newStorageAccountSuffix'), '.blob.core.windows.net/', variables('vhdContainerName'))]",
							"[concat('https://', variables('uniqueStringArray')[4], variables('newStorageAccountSuffix'), '.blob.core.windows.net/', variables('vhdContainerName'))]"
						],
						"name": "[variables('osDiskName')]",
						"caching": "ReadOnly",
						"createOption": "FromImage"
					},
					"imageReference": "[variables('imageReference')]"
				},
				"osProfile": {
					"computerNamePrefix": "[variables('namingInfix')]",
					"adminUsername": "[parameters('adminUsername')]",
					"adminPassword": "[parameters('adminPassword')]"
				},
				"networkProfile": {
					"networkInterfaceConfigurations": [{
						"name": "[variables('nicName')]",
						"properties": {
							"primary": "true",
							"ipConfigurations": [{
								"name": "[variables('ipConfigName')]",
								"properties": {
									"subnet": {
										"id": "[variables('subnetRef')]"
									}
								}
							}]
						}
					}]
				}
			}
		},
		"dependsOn": [
			"storageLoop"
		]
	}]
}
